version: '3.8'
services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: warehouse_db
      POSTGRES_USER: warehouse_user
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U warehouse_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для кеширования и WebSocket
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://warehouse_user:secure_password@postgres:5432/warehouse_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_jwt_secret_key
      AI_API_KEY: your_ai_api_key
      AI_SERVICE: openai # или yandex, local
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads

  # Frontend приложение
  frontend:
    build: ./frontend
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_WS_URL: ws://localhost:3000
    ports:
      - "80:80"
    depends_on:
      - backend

  # Эмулятор роботов для тестирования
  robot_emulator:
    build: ./robot_emulator
    environment:
      API_URL: http://backend:3000
      ROBOTS_COUNT: 5
      UPDATE_INTERVAL: 10 # секунды
    depends_on:
      - backend

volumes:
  postgres_data:
    